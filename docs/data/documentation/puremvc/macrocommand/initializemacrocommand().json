{"sections":[],"schemaVersion":{"minor":3,"major":0,"patch":0},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"initializeMacroCommand"},{"kind":"text","text":"()"}]}]},{"content":[{"level":2,"type":"heading","anchor":"discussion","text":"Discussion"},{"inlineContent":[{"type":"text","text":"In your subclass, override this method to"},{"type":"text","text":" "},{"type":"text","text":"initialize the "},{"code":"MacroCommand","type":"codeVoice"},{"type":"text","text":"â€™s "},{"type":"emphasis","inlineContent":[{"text":"SubCommand","type":"text"}]},{"type":"text","text":" "},{"type":"text","text":"list with closure references like"},{"type":"text","text":" "},{"type":"text","text":"this:"}],"type":"paragraph"},{"code":["\/\/ Initialize MyMacroCommand","public func addSubCommand(closure: () -> ICommand) {","    addSubCommand( { FirstCommand() } );","    addSubCommand( { SecondCommand() } );","    addSubCommand { ThirdCommand() }; \/\/ or by using a trailing closure","}"],"type":"codeListing","syntax":null},{"inlineContent":[{"type":"text","text":"Note that "},{"inlineContent":[{"type":"text","text":"SubCommands"}],"type":"emphasis"},{"type":"text","text":" may be any closure returning "},{"type":"codeVoice","code":"ICommand"},{"type":"text","text":" "},{"type":"text","text":"implementor, "},{"type":"codeVoice","code":"MacroCommands"},{"type":"text","text":" or "},{"type":"codeVoice","code":"SimpleCommands"},{"type":"text","text":" are both acceptable."}],"type":"paragraph"}],"kind":"content"}],"metadata":{"symbolKind":"method","externalID":"s:7PureMVC12MacroCommandC010initializecD0yyF","title":"initializeMacroCommand()","role":"symbol","roleHeading":"Instance Method","modules":[{"name":"PureMVC"}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"initializeMacroCommand"},{"kind":"text","text":"()"}]},"hierarchy":{"paths":[["doc:\/\/PureMVC\/documentation\/PureMVC","doc:\/\/PureMVC\/documentation\/PureMVC\/MacroCommand"]]},"abstract":[{"text":"Initialize the ","type":"text"},{"code":"MacroCommand","type":"codeVoice"},{"text":".","type":"text"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/puremvc\/macrocommand\/initializemacrocommand()"]}],"kind":"symbol","identifier":{"url":"doc:\/\/PureMVC\/documentation\/PureMVC\/MacroCommand\/initializeMacroCommand()","interfaceLanguage":"swift"},"references":{"doc://PureMVC/documentation/PureMVC":{"title":"PureMVC","url":"\/documentation\/puremvc","role":"collection","type":"topic","abstract":[],"kind":"symbol","identifier":"doc:\/\/PureMVC\/documentation\/PureMVC"},"doc://PureMVC/documentation/PureMVC/MacroCommand/initializeMacroCommand()":{"type":"topic","title":"initializeMacroCommand()","identifier":"doc:\/\/PureMVC\/documentation\/PureMVC\/MacroCommand\/initializeMacroCommand()","url":"\/documentation\/puremvc\/macrocommand\/initializemacrocommand()","abstract":[{"type":"text","text":"Initialize the "},{"type":"codeVoice","code":"MacroCommand"},{"type":"text","text":"."}],"kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"initializeMacroCommand"},{"kind":"text","text":"()"}]},"doc://PureMVC/documentation/PureMVC/MacroCommand":{"title":"MacroCommand","kind":"symbol","type":"topic","identifier":"doc:\/\/PureMVC\/documentation\/PureMVC\/MacroCommand","navigatorTitle":[{"text":"MacroCommand","kind":"identifier"}],"abstract":[{"text":"A base ","type":"text"},{"type":"codeVoice","code":"ICommand"},{"text":" implementation that executes other ","type":"text"},{"type":"codeVoice","code":"ICommand"},{"text":"s.","type":"text"}],"url":"\/documentation\/puremvc\/macrocommand","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MacroCommand","kind":"identifier"}],"role":"symbol"}}}