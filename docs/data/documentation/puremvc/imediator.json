{"topicSections":[{"generated":true,"title":"Instance Properties","identifiers":["doc:\/\/PureMVC\/documentation\/PureMVC\/IMediator\/name","doc:\/\/PureMVC\/documentation\/PureMVC\/IMediator\/viewComponent"],"anchor":"Instance-Properties"},{"generated":true,"title":"Instance Methods","identifiers":["doc:\/\/PureMVC\/documentation\/PureMVC\/IMediator\/handleNotification(_:)","doc:\/\/PureMVC\/documentation\/PureMVC\/IMediator\/listNotificationInterests()","doc:\/\/PureMVC\/documentation\/PureMVC\/IMediator\/onRegister()","doc:\/\/PureMVC\/documentation\/PureMVC\/IMediator\/onRemove()"],"anchor":"Instance-Methods"}],"relationshipsSections":[{"type":"inheritsFrom","kind":"relationships","title":"Inherits From","identifiers":["doc:\/\/PureMVC\/documentation\/PureMVC\/INotifier"]},{"type":"conformingTypes","kind":"relationships","title":"Conforming Types","identifiers":["doc:\/\/PureMVC\/documentation\/PureMVC\/Mediator"]}],"metadata":{"roleHeading":"Protocol","role":"symbol","symbolKind":"protocol","navigatorTitle":[{"text":"IMediator","kind":"identifier"}],"modules":[{"name":"PureMVC"}],"externalID":"s:7PureMVC9IMediatorP","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"IMediator","kind":"identifier"}],"title":"IMediator"},"hierarchy":{"paths":[["doc:\/\/PureMVC\/documentation\/PureMVC"]]},"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"IMediator"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:7PureMVC9INotifierP","text":"INotifier","identifier":"doc:\/\/PureMVC\/documentation\/PureMVC\/INotifier"}],"platforms":["macOS"]}],"kind":"declarations"},{"kind":"content","content":[{"anchor":"overview","type":"heading","level":2,"text":"Overview"},{"type":"paragraph","inlineContent":[{"text":"In PureMVC, ","type":"text"},{"code":"IMediator","type":"codeVoice"},{"text":" implementors assume these responsibilities:","type":"text"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Implement a common method which returns a list of all "},{"type":"codeVoice","code":"INotification"},{"type":"text","text":"s the "},{"type":"codeVoice","code":"IMediator"},{"type":"text","text":" has interest in."}]}]},{"content":[{"inlineContent":[{"text":"Implement a notification callback method.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Implement methods that are called when the IMediator is registered or removed from the View."}]}]}]},{"type":"paragraph","inlineContent":[{"text":"Additionally, ","type":"text"},{"code":"IMediator","type":"codeVoice"},{"text":"s typically:","type":"text"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Act as an intermediary between one or more view components such as text boxes or list controls, maintaining references and coordinating their behavior."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"In Flash-based apps, this is often the place where event listeners are added to view components, and their handlers implemented."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Respond to and generate "},{"type":"codeVoice","code":"INotifications"},{"type":"text","text":", interacting with of the rest of the PureMVC app."}]}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"When an "},{"type":"codeVoice","code":"IMediator"},{"type":"text","text":" is registered with the "},{"type":"codeVoice","code":"IView"},{"type":"text","text":","},{"type":"text","text":" "},{"type":"text","text":"the "},{"type":"codeVoice","code":"IView"},{"type":"text","text":" will call the "},{"type":"codeVoice","code":"IMediator"},{"type":"text","text":"’s"},{"type":"text","text":" "},{"type":"codeVoice","code":"listNotificationInterests"},{"type":"text","text":" method. The "},{"type":"codeVoice","code":"IMediator"},{"type":"text","text":" will"},{"type":"text","text":" "},{"type":"text","text":"return an "},{"type":"codeVoice","code":"Array"},{"type":"text","text":" of "},{"type":"codeVoice","code":"INotification"},{"type":"text","text":" names which"},{"type":"text","text":" "},{"type":"text","text":"it wishes to be notified about."}]},{"type":"paragraph","inlineContent":[{"text":"The ","type":"text"},{"code":"IView","type":"codeVoice"},{"text":" will then create an ","type":"text"},{"code":"Observer","type":"codeVoice"},{"text":" object","type":"text"},{"text":" ","type":"text"},{"text":"encapsulating that ","type":"text"},{"code":"IMediator","type":"codeVoice"},{"text":"’s (","type":"text"},{"code":"handleNotification","type":"codeVoice"},{"text":") method","type":"text"},{"text":" ","type":"text"},{"text":"and register it as an Observer for each ","type":"text"},{"code":"INotification","type":"codeVoice"},{"text":" name returned by","type":"text"},{"text":" ","type":"text"},{"code":"listNotificationInterests","type":"codeVoice"},{"text":".","type":"text"}]},{"type":"paragraph","inlineContent":[{"code":"@see org.puremvc.swift.multicore.interfaces.INotification INotification","type":"codeVoice"}]}]}],"variants":[{"paths":["\/documentation\/puremvc\/imediator"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"kind":"symbol","schemaVersion":{"major":0,"minor":3,"patch":0},"identifier":{"url":"doc:\/\/PureMVC\/documentation\/PureMVC\/IMediator","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"The interface definition for a PureMVC Mediator."}],"references":{"doc://PureMVC/documentation/PureMVC/INotifier":{"abstract":[{"type":"text","text":"The interface definition for a PureMVC Notifier."}],"url":"\/documentation\/puremvc\/inotifier","kind":"symbol","navigatorTitle":[{"text":"INotifier","kind":"identifier"}],"type":"topic","title":"INotifier","identifier":"doc:\/\/PureMVC\/documentation\/PureMVC\/INotifier","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"INotifier","kind":"identifier"}],"role":"symbol"},"doc://PureMVC/documentation/PureMVC/IMediator/onRemove()":{"kind":"symbol","type":"topic","title":"onRemove()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"onRemove"},{"kind":"text","text":"()"}],"url":"\/documentation\/puremvc\/imediator\/onremove()","abstract":[{"text":"Called by the View when the Mediator is removed","type":"text"}],"identifier":"doc:\/\/PureMVC\/documentation\/PureMVC\/IMediator\/onRemove()","role":"symbol","required":true},"doc://PureMVC/documentation/PureMVC/IMediator/handleNotification(_:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"handleNotification","kind":"identifier"},{"text":"(any ","kind":"text"},{"preciseIdentifier":"s:7PureMVC13INotificationP","text":"INotification","kind":"typeIdentifier"},{"text":")","kind":"text"}],"title":"handleNotification(_:)","kind":"symbol","url":"\/documentation\/puremvc\/imediator\/handlenotification(_:)","identifier":"doc:\/\/PureMVC\/documentation\/PureMVC\/IMediator\/handleNotification(_:)","role":"symbol","abstract":[{"type":"text","text":"Handle an "},{"type":"codeVoice","code":"INotification"},{"type":"text","text":"."}],"type":"topic","required":true},"doc://PureMVC/documentation/PureMVC":{"abstract":[],"url":"\/documentation\/puremvc","kind":"symbol","type":"topic","title":"PureMVC","identifier":"doc:\/\/PureMVC\/documentation\/PureMVC","role":"collection"},"doc://PureMVC/documentation/PureMVC/IMediator/listNotificationInterests()":{"kind":"symbol","type":"topic","identifier":"doc:\/\/PureMVC\/documentation\/PureMVC\/IMediator\/listNotificationInterests()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"listNotificationInterests"},{"kind":"text","text":"() -> ["},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":"]"}],"title":"listNotificationInterests()","url":"\/documentation\/puremvc\/imediator\/listnotificationinterests()","abstract":[{"text":"List ","type":"text"},{"code":"INotification","type":"codeVoice"},{"text":" interests.","type":"text"}],"role":"symbol","required":true},"doc://PureMVC/documentation/PureMVC/IMediator/name":{"kind":"symbol","type":"topic","abstract":[{"type":"text","text":"Get the "},{"type":"codeVoice","code":"IMediator"},{"type":"text","text":" instance name"}],"required":true,"role":"symbol","identifier":"doc:\/\/PureMVC\/documentation\/PureMVC\/IMediator\/name","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"name"},{"kind":"text","text":": "},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"}],"url":"\/documentation\/puremvc\/imediator\/name","title":"name"},"doc://PureMVC/documentation/PureMVC/IMediator/viewComponent":{"abstract":[{"type":"text","text":"Get or set the "},{"type":"codeVoice","code":"IMediator"},{"type":"text","text":"’s view component."}],"title":"viewComponent","kind":"symbol","identifier":"doc:\/\/PureMVC\/documentation\/PureMVC\/IMediator\/viewComponent","role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"viewComponent"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"AnyObject","preciseIdentifier":"s:s9AnyObjecta"},{"kind":"text","text":"?"}],"type":"topic","url":"\/documentation\/puremvc\/imediator\/viewcomponent","required":true},"doc://PureMVC/documentation/PureMVC/IMediator":{"title":"IMediator","identifier":"doc:\/\/PureMVC\/documentation\/PureMVC\/IMediator","kind":"symbol","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"IMediator"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"IMediator"}],"abstract":[{"type":"text","text":"The interface definition for a PureMVC Mediator."}],"url":"\/documentation\/puremvc\/imediator","type":"topic"},"doc://PureMVC/documentation/PureMVC/Mediator":{"identifier":"doc:\/\/PureMVC\/documentation\/PureMVC\/Mediator","abstract":[{"text":"A base ","type":"text"},{"code":"IMediator","type":"codeVoice"},{"text":" implementation.","type":"text"}],"title":"Mediator","role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Mediator","kind":"identifier"}],"url":"\/documentation\/puremvc\/mediator","navigatorTitle":[{"text":"Mediator","kind":"identifier"}],"kind":"symbol","type":"topic"},"doc://PureMVC/documentation/PureMVC/IMediator/onRegister()":{"abstract":[{"type":"text","text":"Called by the View when the Mediator is registered"}],"role":"symbol","identifier":"doc:\/\/PureMVC\/documentation\/PureMVC\/IMediator\/onRegister()","url":"\/documentation\/puremvc\/imediator\/onregister()","title":"onRegister()","kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"onRegister"},{"kind":"text","text":"()"}],"required":true}}}