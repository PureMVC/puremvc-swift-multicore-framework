{"metadata":{"title":"IMediator","symbolKind":"protocol","externalID":"s:7PureMVC9IMediatorP","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"IMediator","kind":"identifier"}],"roleHeading":"Protocol","modules":[{"name":"PureMVC"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"IMediator"}]},"identifier":{"url":"doc:\/\/PureMVC\/documentation\/PureMVC\/IMediator","interfaceLanguage":"swift"},"kind":"symbol","sections":[],"abstract":[{"type":"text","text":"The interface definition for a PureMVC Mediator."}],"schemaVersion":{"major":0,"minor":3,"patch":0},"topicSections":[{"title":"Instance Properties","identifiers":["doc:\/\/PureMVC\/documentation\/PureMVC\/IMediator\/name","doc:\/\/PureMVC\/documentation\/PureMVC\/IMediator\/viewComponent"],"generated":true,"anchor":"Instance-Properties"},{"title":"Instance Methods","identifiers":["doc:\/\/PureMVC\/documentation\/PureMVC\/IMediator\/handleNotification(_:)","doc:\/\/PureMVC\/documentation\/PureMVC\/IMediator\/listNotificationInterests()","doc:\/\/PureMVC\/documentation\/PureMVC\/IMediator\/onRegister()","doc:\/\/PureMVC\/documentation\/PureMVC\/IMediator\/onRemove()"],"generated":true,"anchor":"Instance-Methods"}],"relationshipsSections":[{"kind":"relationships","title":"Inherits From","identifiers":["doc:\/\/PureMVC\/documentation\/PureMVC\/INotifier"],"type":"inheritsFrom"},{"kind":"relationships","title":"Conforming Types","identifiers":["doc:\/\/PureMVC\/documentation\/PureMVC\/Mediator"],"type":"conformingTypes"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"IMediator","kind":"identifier"},{"text":" : ","kind":"text"},{"identifier":"doc:\/\/PureMVC\/documentation\/PureMVC\/INotifier","preciseIdentifier":"s:7PureMVC9INotifierP","text":"INotifier","kind":"typeIdentifier"}],"platforms":["macOS"],"languages":["swift"]}]},{"kind":"content","content":[{"anchor":"overview","text":"Overview","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"text":"In PureMVC, ","type":"text"},{"code":"IMediator","type":"codeVoice"},{"text":" implementors assume these responsibilities:","type":"text"}]},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Implement a common method which returns a list of all "},{"type":"codeVoice","code":"INotification"},{"type":"text","text":"s the "},{"type":"codeVoice","code":"IMediator"},{"type":"text","text":" has interest in."}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Implement a notification callback method."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Implement methods that are called when the IMediator is registered or removed from the View.","type":"text"}],"type":"paragraph"}]}],"type":"unorderedList"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Additionally, "},{"type":"codeVoice","code":"IMediator"},{"type":"text","text":"s typically:"}]},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Act as an intermediary between one or more view components such as text boxes or list controls, maintaining references and coordinating their behavior."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"In Flash-based apps, this is often the place where event listeners are added to view components, and their handlers implemented.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Respond to and generate ","type":"text"},{"type":"codeVoice","code":"INotifications"},{"text":", interacting with of the rest of the PureMVC app.","type":"text"}]}]}],"type":"unorderedList"},{"type":"paragraph","inlineContent":[{"text":"When an ","type":"text"},{"code":"IMediator","type":"codeVoice"},{"text":" is registered with the ","type":"text"},{"code":"IView","type":"codeVoice"},{"text":",","type":"text"},{"text":" ","type":"text"},{"text":"the ","type":"text"},{"code":"IView","type":"codeVoice"},{"text":" will call the ","type":"text"},{"code":"IMediator","type":"codeVoice"},{"text":"’s","type":"text"},{"text":" ","type":"text"},{"code":"listNotificationInterests","type":"codeVoice"},{"text":" method. The ","type":"text"},{"code":"IMediator","type":"codeVoice"},{"text":" will","type":"text"},{"text":" ","type":"text"},{"text":"return an ","type":"text"},{"code":"Array","type":"codeVoice"},{"text":" of ","type":"text"},{"code":"INotification","type":"codeVoice"},{"text":" names which","type":"text"},{"text":" ","type":"text"},{"text":"it wishes to be notified about.","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"The ","type":"text"},{"code":"IView","type":"codeVoice"},{"text":" will then create an ","type":"text"},{"code":"Observer","type":"codeVoice"},{"text":" object","type":"text"},{"text":" ","type":"text"},{"text":"encapsulating that ","type":"text"},{"code":"IMediator","type":"codeVoice"},{"text":"’s (","type":"text"},{"code":"handleNotification","type":"codeVoice"},{"text":") method","type":"text"},{"text":" ","type":"text"},{"text":"and register it as an Observer for each ","type":"text"},{"code":"INotification","type":"codeVoice"},{"text":" name returned by","type":"text"},{"text":" ","type":"text"},{"code":"listNotificationInterests","type":"codeVoice"},{"text":".","type":"text"}]},{"type":"paragraph","inlineContent":[{"code":"@see org.puremvc.swift.multicore.interfaces.INotification INotification","type":"codeVoice"}]}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/puremvc\/imediator"]}],"hierarchy":{"paths":[["doc:\/\/PureMVC\/documentation\/PureMVC"]]},"references":{"doc://PureMVC/documentation/PureMVC/INotifier":{"url":"\/documentation\/puremvc\/inotifier","type":"topic","navigatorTitle":[{"kind":"identifier","text":"INotifier"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"INotifier"}],"identifier":"doc:\/\/PureMVC\/documentation\/PureMVC\/INotifier","title":"INotifier","role":"symbol","abstract":[{"type":"text","text":"The interface definition for a PureMVC Notifier."}],"kind":"symbol"},"doc://PureMVC/documentation/PureMVC/IMediator/handleNotification(_:)":{"kind":"symbol","type":"topic","abstract":[{"type":"text","text":"Handle an "},{"type":"codeVoice","code":"INotification"},{"type":"text","text":"."}],"title":"handleNotification(_:)","role":"symbol","identifier":"doc:\/\/PureMVC\/documentation\/PureMVC\/IMediator\/handleNotification(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"handleNotification"},{"kind":"text","text":"(any "},{"kind":"typeIdentifier","preciseIdentifier":"s:7PureMVC13INotificationP","text":"INotification"},{"kind":"text","text":")"}],"url":"\/documentation\/puremvc\/imediator\/handlenotification(_:)","required":true},"doc://PureMVC/documentation/PureMVC/IMediator/listNotificationInterests()":{"url":"\/documentation\/puremvc\/imediator\/listnotificationinterests()","kind":"symbol","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"listNotificationInterests","kind":"identifier"},{"text":"() -> [","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":"]","kind":"text"}],"title":"listNotificationInterests()","type":"topic","identifier":"doc:\/\/PureMVC\/documentation\/PureMVC\/IMediator\/listNotificationInterests()","required":true,"abstract":[{"text":"List ","type":"text"},{"code":"INotification","type":"codeVoice"},{"text":" interests.","type":"text"}]},"doc://PureMVC/documentation/PureMVC/IMediator/onRemove()":{"role":"symbol","url":"\/documentation\/puremvc\/imediator\/onremove()","title":"onRemove()","identifier":"doc:\/\/PureMVC\/documentation\/PureMVC\/IMediator\/onRemove()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"onRemove"},{"kind":"text","text":"()"}],"type":"topic","abstract":[{"type":"text","text":"Called by the View when the Mediator is removed"}],"kind":"symbol","required":true},"doc://PureMVC/documentation/PureMVC/IMediator/viewComponent":{"title":"viewComponent","abstract":[{"text":"Get or set the ","type":"text"},{"code":"IMediator","type":"codeVoice"},{"text":"’s view component.","type":"text"}],"type":"topic","identifier":"doc:\/\/PureMVC\/documentation\/PureMVC\/IMediator\/viewComponent","kind":"symbol","role":"symbol","url":"\/documentation\/puremvc\/imediator\/viewcomponent","required":true,"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"viewComponent","kind":"identifier"},{"text":": ","kind":"text"},{"text":"AnyObject","kind":"typeIdentifier","preciseIdentifier":"s:s9AnyObjecta"},{"text":"?","kind":"text"}]},"doc://PureMVC/documentation/PureMVC/IMediator/onRegister()":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"onRegister"},{"kind":"text","text":"()"}],"identifier":"doc:\/\/PureMVC\/documentation\/PureMVC\/IMediator\/onRegister()","type":"topic","role":"symbol","required":true,"kind":"symbol","abstract":[{"type":"text","text":"Called by the View when the Mediator is registered"}],"url":"\/documentation\/puremvc\/imediator\/onregister()","title":"onRegister()"},"doc://PureMVC/documentation/PureMVC/IMediator/name":{"type":"topic","abstract":[{"type":"text","text":"Get the "},{"code":"IMediator","type":"codeVoice"},{"type":"text","text":" instance name"}],"kind":"symbol","url":"\/documentation\/puremvc\/imediator\/name","title":"name","required":true,"identifier":"doc:\/\/PureMVC\/documentation\/PureMVC\/IMediator\/name","role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"name"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"}]},"doc://PureMVC/documentation/PureMVC":{"title":"PureMVC","url":"\/documentation\/puremvc","role":"collection","type":"topic","abstract":[],"kind":"symbol","identifier":"doc:\/\/PureMVC\/documentation\/PureMVC"},"doc://PureMVC/documentation/PureMVC/IMediator":{"title":"IMediator","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"IMediator","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/PureMVC\/documentation\/PureMVC\/IMediator","url":"\/documentation\/puremvc\/imediator","type":"topic","abstract":[{"type":"text","text":"The interface definition for a PureMVC Mediator."}],"navigatorTitle":[{"text":"IMediator","kind":"identifier"}]},"doc://PureMVC/documentation/PureMVC/Mediator":{"title":"Mediator","identifier":"doc:\/\/PureMVC\/documentation\/PureMVC\/Mediator","kind":"symbol","abstract":[{"text":"A base ","type":"text"},{"code":"IMediator","type":"codeVoice"},{"text":" implementation.","type":"text"}],"navigatorTitle":[{"text":"Mediator","kind":"identifier"}],"role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Mediator","kind":"identifier"}],"type":"topic","url":"\/documentation\/puremvc\/mediator"}}}